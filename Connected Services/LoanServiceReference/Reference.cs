//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoanServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoanModel", Namespace="http://schemas.datacontract.org/2004/07/LoanApplicationWCFService.Models")]
    public partial class LoanModel : object
    {
        
        private System.Guid CustomerIdField;
        
        private bool IsActiveField;
        
        private decimal LoanAmountField;
        
        private string LoanApprovedDateField;
        
        private System.Guid LoanIdField;
        
        private int LoanTenureField;
        
        private string LoanTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CustomerId
        {
            get
            {
                return this.CustomerIdField;
            }
            set
            {
                this.CustomerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LoanAmount
        {
            get
            {
                return this.LoanAmountField;
            }
            set
            {
                this.LoanAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanApprovedDate
        {
            get
            {
                return this.LoanApprovedDateField;
            }
            set
            {
                this.LoanApprovedDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LoanId
        {
            get
            {
                return this.LoanIdField;
            }
            set
            {
                this.LoanIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoanTenure
        {
            get
            {
                return this.LoanTenureField;
            }
            set
            {
                this.LoanTenureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanType
        {
            get
            {
                return this.LoanTypeField;
            }
            set
            {
                this.LoanTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoanServiceReference.ILoanService")]
    public interface ILoanService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanService/AddLoan", ReplyAction="http://tempuri.org/ILoanService/AddLoanResponse")]
        System.Threading.Tasks.Task AddLoanAsync(LoanServiceReference.LoanModel loan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanService/UpdateLoan", ReplyAction="http://tempuri.org/ILoanService/UpdateLoanResponse")]
        System.Threading.Tasks.Task UpdateLoanAsync(LoanServiceReference.LoanModel loan, System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanService/DeleteLoan", ReplyAction="http://tempuri.org/ILoanService/DeleteLoanResponse")]
        System.Threading.Tasks.Task DeleteLoanAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanService/GetAllLoans", ReplyAction="http://tempuri.org/ILoanService/GetAllLoansResponse")]
        System.Threading.Tasks.Task<LoanServiceReference.LoanModel[]> GetAllLoansAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoanService/GetLoanById", ReplyAction="http://tempuri.org/ILoanService/GetLoanByIdResponse")]
        System.Threading.Tasks.Task<LoanServiceReference.LoanModel> GetLoanByIdAsync(System.Guid Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ILoanServiceChannel : LoanServiceReference.ILoanService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class LoanServiceClient : System.ServiceModel.ClientBase<LoanServiceReference.ILoanService>, LoanServiceReference.ILoanService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public LoanServiceClient() : 
                base(LoanServiceClient.GetDefaultBinding(), LoanServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ILoanService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoanServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(LoanServiceClient.GetBindingForEndpoint(endpointConfiguration), LoanServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoanServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LoanServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoanServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LoanServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task AddLoanAsync(LoanServiceReference.LoanModel loan)
        {
            return base.Channel.AddLoanAsync(loan);
        }
        
        public System.Threading.Tasks.Task UpdateLoanAsync(LoanServiceReference.LoanModel loan, System.Guid id)
        {
            return base.Channel.UpdateLoanAsync(loan, id);
        }
        
        public System.Threading.Tasks.Task DeleteLoanAsync(System.Guid id)
        {
            return base.Channel.DeleteLoanAsync(id);
        }
        
        public System.Threading.Tasks.Task<LoanServiceReference.LoanModel[]> GetAllLoansAsync()
        {
            return base.Channel.GetAllLoansAsync();
        }
        
        public System.Threading.Tasks.Task<LoanServiceReference.LoanModel> GetLoanByIdAsync(System.Guid Id)
        {
            return base.Channel.GetLoanByIdAsync(Id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILoanService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ILoanService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:54073/WCFServices/Loan/LoanService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return LoanServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ILoanService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return LoanServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ILoanService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ILoanService,
        }
    }
}
